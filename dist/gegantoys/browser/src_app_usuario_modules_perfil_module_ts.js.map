{"version":3,"file":"src_app_usuario_modules_perfil_module_ts.js","mappings":"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","sources":["./src/app/shared/guards/auth.guard.ts","./src/app/usuario/components/perfil/perfil.component.ts","./src/app/usuario/components/perfil/perfil.component.html","./src/app/usuario/modules/perfil-routing.module.ts","./src/app/usuario/modules/perfil.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { AppState } from 'src/app/app.reducers';\nimport { Auth } from 'src/app/auth/models/auth.interface';\nimport { AuthState } from 'src/app/auth/reducers';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n\n  access_token!:string;\n\n  constructor(\n    private router: Router,\n    private store:Store<AppState>\n  ) {\n\n    this.store.select('auth').subscribe({\n      next:(authState:AuthState) => {\n        this.access_token = authState.auth.access_token;\n      }\n    });\n\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n      if (this.access_token) {\n        //Si esta logado la pagina se cargar√°\n        return true;\n      }\n  \n      this.router.navigate(['/login']);\n  \n      return false;\n  \n  }\n  \n}\n","import { formatDate } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { timer } from 'rxjs';\nimport { Usuario } from 'src/app/shared/models/usuario.interface';\nimport { ConfirmPasswordValidator } from 'src/app/shared/directivas/match-passwords.directive';\nimport { ToastService } from 'src/app/shared/services/toast.service';\n\n\nimport * as userActions from '../../actions/index';\nimport { AuthState } from 'src/app/auth/reducers';\nimport { AppState } from 'src/app/app.reducers';\nimport { UserState } from '../../reducers';\n\n\n\n\n@Component({\n  selector: 'app-perfil',\n  templateUrl: './perfil.component.html',\n  styleUrls: ['./perfil.component.scss']\n})\nexport class PerfilComponent implements OnInit {\n\n  hide:boolean = true;\n\n  user_id!:string;\n  usuario!:Usuario;\n  perfilForm!: FormGroup;\n  \n  email!:FormControl;\n  nombre!:FormControl;\n  apellidos!:FormControl; \n  fechaNacimiento!: FormControl;\n  newsletter!: FormControl;\n\n  newPassword!:FormControl;\n  newPasswordRepeat!: FormControl;\n\n  constructor(\n\n    private formBuilder: FormBuilder,\n    private router:Router,\n    private store: Store<AppState>,\n    private toastService:ToastService\n\n  ) {\n\n\n    this.store.select('auth').subscribe({\n      next:(authState:AuthState) => {\n        this.user_id = authState.auth.user_id;\n      }\n    });\n\n\n    this.email = new FormControl('', [ Validators.required, Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$') ]);\n    this.nombre = new FormControl('', [ Validators.required, Validators.maxLength(100), Validators.minLength(2) ]);\n    this.apellidos = new FormControl('', [Validators.required, Validators.maxLength(100), Validators.minLength(2) ]);\n    this.fechaNacimiento = new FormControl( new Date(),[ Validators.required ] );\n    this.newsletter = new FormControl();\n    this.newPassword = new FormControl('', [Validators.maxLength(16), Validators.minLength(6)]);\n    this.newPasswordRepeat = new FormControl('', [ Validators.maxLength(16), Validators.minLength(6)]);\n\n    this.perfilForm = this.formBuilder.group({\n      \n      nombre: this.nombre,\n      apellidos: this.apellidos,\n      fechaNacimiento: this.fechaNacimiento,\n      email: this.email,\n      newsletter: this.newsletter,\n      newPassword: this.newPassword,\n      newPasswordRepeat: this.newPasswordRepeat\n\n    },\n    {\n      validator: ConfirmPasswordValidator(\"newPassword\", \"newPasswordRepeat\")\n    }\n    );\n\n    this.store.select('user').subscribe({\n      next:(userState:UserState) => {\n\n        this.usuario = userState.user;\n        this.nombre.setValue(this.usuario.nombre);\n        this.email.setValue(this.usuario.email);\n        this.apellidos.setValue(this.usuario.apellidos);\n        this.newsletter.setValue(this.usuario.newsletter);\n        this.fechaNacimiento.setValue(formatDate(this.usuario.birth_date, 'yyyy-MM-dd', 'en'));\n        //PRINT\n  \n        this.perfilForm = this.formBuilder.group({\n          nombre: this.nombre,\n          apellidos: this.apellidos,\n          newsletter: this.newsletter,\n          fechaNacimiento: this.fechaNacimiento,\n          email: this.email,\n          newPassword: this.newPassword,\n          newPasswordRepeat: this.newPasswordRepeat\n        },\n        {\n          validator: ConfirmPasswordValidator(\"newPassword\", \"newPasswordRepeat\")\n        });\n  \n\n      }\n    });\n\n   }\n\n  ngOnInit(): void {\n\n      this.store.dispatch(userActions.getUserById( { userId: this.user_id }));\n\n  }\n\n\n  actualizaPerfil():void {\n\n    this.usuario = {\n\n      email: this.perfilForm.controls.email.value,\n      nombre : this.perfilForm.controls.nombre.value,\n      apellidos : this.perfilForm.controls.apellidos.value,\n      birth_date : this.perfilForm.controls.fechaNacimiento.value,\n      newsletter :((<boolean>this.newsletter.value) ? true : false), \n      newPassword : this.perfilForm.controls.newPassword.value ? this.perfilForm.controls.newPassword.value : '',\n      \n    }\n\n    this.store.dispatch(userActions.updateUser({userId: this.user_id, user: this.usuario}));\n  }\n\n}\n","\n\n\n<div class=\"contenedor-pagina-peq\">\n\n    <div class=\"titulo-pagina\">Actualizar datos de tu perfil. </div>\n\n    <form *ngIf=\"perfilForm\" [formGroup]=\"perfilForm\" (ngSubmit)=\"actualizaPerfil()\" >\n\n        <div class=\"my-10 sm:w-1/2 mx-auto text-left \">\n            <mat-form-field appearance=\"outline\" class=\"w-full\" >\n                <mat-label >Nombre:</mat-label>\n                <input matInput type=\"text\" [formControl]=\"nombre\" />\n                <mat-error>\n                    <div *ngIf=\"nombre.errors && nombre.touched\" [ngClass]=\"'error'\">\n                        <div *ngIf=\"nombre.errors.required\">\n                            El nombre de pila es obligatorio.\n                        </div>\n                        <div *ngIf=\"nombre.errors.minlength\">\n                            Password m√≠nimo de 2 caracteres.\n                        </div>\n                        <div *ngIf=\"nombre.errors.maxlength\">\n                            Password m√°ximo 100 caracteres.\n                        </div>\n                    </div>\n                </mat-error>\n            </mat-form-field>\n        </div>\n\n\n        <div class=\"my-10 sm:w-1/2 mx-auto text-left\">\n            <mat-form-field appearance=\"outline\" class=\"w-full\" >\n                <mat-label >Apellidos:</mat-label>\n                <input matInput type=\"text\" [formControl]=\"apellidos\" />\n                <mat-error>\n                    <div *ngIf=\"apellidos.errors && apellidos.touched\" [ngClass]=\"'error'\">\n                        <div *ngIf=\"apellidos.errors.required\">\n                            El campo Apellidos es obligatorio.\n                        </div>\n                        <div *ngIf=\"apellidos.errors.minlength\">\n                            Apellidos m√≠nimo de 2 caracteres.\n                        </div>\n                        <div *ngIf=\"apellidos.errors.maxlength\">\n                            Apellidos m√°ximo 100 caracteres.\n                        </div>\n\n                    </div>\n                </mat-error>\n            </mat-form-field>\n        </div>\n\n\n        <div class=\"my-10 sm:w-1/2 mx-auto text-left\">\n            <mat-form-field appearance=\"outline\" class=\"w-full \" >\n                <mat-label>Fecha nacimiento:</mat-label>\n                <input matInput type=\"date\" [formControl]=\"fechaNacimiento\" />\n                <mat-error>\n                    <div *ngIf=\"fechaNacimiento.errors && fechaNacimiento.touched\" [ngClass]=\"'error'\">\n                        <div *ngIf=\"fechaNacimiento.errors.required\">\n                            La fecha de nacimiento es obligatorio.\n                        </div>\n                    </div>\n                </mat-error>\n            </mat-form-field>\n        </div>\n\n\n\n        <div class=\"my-10 sm:w-1/2 mx-auto text-left\">\n            <mat-form-field appearance=\"outline\" class=\"w-full \">\n                <mat-label>Email</mat-label>\n                    <input matInput type=\"email\" [formControl]=\"email\"  >\n                    <mat-error >\n                        <span *ngIf=\"email.errors && (email.touched || email.dirty)\">\n                            <span *ngIf=\"email.errors.required\">\n                                Email es requerido\n                            </span>\n                            <span *ngIf=\"email.errors.pattern\">\n                                Email no tiene formato v√°lido.\n                            </span>\n                        </span>\n                    </mat-error>\n            </mat-form-field>\n        </div>\n\n        <div class=\"my-10 text-left mx-auto sm:w-2/3 2xl:w-1/2 text-center\">\n            <input  type=\"checkbox\" class=\"inline mr-2 w-5 h-5 align-middle\"  [formControl]=\"newsletter\" checked =\"false\" >\n            <label for=\"recibirEmails\" class=\"inline text-lg align-middle\" >Deseo recibir emails de juguetes que me puedan interesar.</label>\n        </div>\n\n        <div class=\"text-center text-base sm:text-xl 2xl:text-2xl text-orange-electric \">Cambiar contrase√±a actual</div>\n\n        <div class=\"my-10 sm:w-1/2 mx-auto text-left\">\n            <mat-form-field appearance=\"outline\" class=\"w-full\" >\n                <mat-label >Nueva contrase√±a</mat-label>\n                <input matInput [type]=\"hide ? 'password' : 'text'\"  [formControl]=\"newPassword\" >\n                <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n                  <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                </button>\n                <mat-error>\n                    <div *ngIf=\"newPassword.errors && newPassword.touched\" [ngClass]=\"'error'\">\n                        <div *ngIf=\"newPassword.errors.minlength\">\n                            Password m√≠nimo de 6 caracteres.\n                        </div>\n                        <div *ngIf=\"newPassword.errors.maxlength\">\n                            Password m√°ximo 16 caracteres.\n                        </div>\n                    </div>\n                </mat-error>\n            </mat-form-field>\n\n\n        </div>\n\n        <div class=\"my-10 sm:w-1/2 mx-auto text-left\">\n\n            <mat-form-field appearance=\"outline\" class=\"w-full\" >\n                <mat-label >Repite nueva contrase√±a</mat-label>\n                <input matInput [type]=\"hide ? 'password' : 'text'\"  [formControl]=\"newPasswordRepeat\" >\n                <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n                    <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                </button>\n                <mat-error>\n                    <div *ngIf=\"newPasswordRepeat.errors && newPasswordRepeat.touched\" [ngClass]=\"'error'\">\n                        <div *ngIf=\"newPasswordRepeat.errors.confirmPasswordValidator\">\n                            Los password han de coincidir.\n                        </div>\n                        <div *ngIf=\"newPasswordRepeat.errors.minlength\">\n                            Password m√≠nimo de 6 caracteres.\n                        </div>\n                        <div *ngIf=\"newPasswordRepeat.errors.maxlength\">\n                            Password m√°ximo 16 caracteres.\n                        </div>\n                    </div>\n                </mat-error>\n            </mat-form-field>\n        </div>\n\n        <div class=\"text-center py-4 sm:py-8\">\n            <button type=\"submit\" class=\"btn boton-misc-rojo \"  [disabled]=\"perfilForm.invalid\" >\n                Actualizar perfil\n            </button>\n        </div>\n    </form>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from 'src/app/shared/guards/auth.guard';\nimport { PerfilComponent } from '../components/perfil/perfil.component';\n\n\nconst routes: Routes = [\n  {\n    path: '', \n    component: PerfilComponent,\n    canActivate: [AuthGuard],     \n  },\n  ];\n\n\n@NgModule({\n\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n\n})\nexport class PerfilRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PerfilComponent } from '../components/perfil/perfil.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatIconModule } from '@angular/material/icon';\nimport { PerfilRoutingModule } from './perfil-routing.module';\n\n\n\n@NgModule({\n  declarations: [\n    PerfilComponent,\n  ],\n  imports: [\n\n    CommonModule,\n    PerfilRoutingModule,    \n    ReactiveFormsModule,        \n    MatFormFieldModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatIconModule,\n  ]\n})\nexport class PerfilModule { }\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}