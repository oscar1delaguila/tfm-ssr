{"version":3,"file":"src_app_usuario_modules_register_module_ts.js","mappings":"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","sources":["./src/app/usuario/components/register/register.component.ts","./src/app/usuario/components/register/register.component.html","./src/app/usuario/modules/register-routing.module.ts","./src/app/usuario/modules/register.module.ts"],"sourcesContent":["import { formatDate } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { timer } from 'rxjs';\nimport { Usuario } from 'src/app/shared/models/usuario.interface';\nimport { ConfirmPasswordValidator } from 'src/app/shared/directivas/match-passwords.directive';\nimport { ToastService } from 'src/app/shared/services/toast.service';\nimport * as varGlobals from '../../../globals';\nimport * as userActions from '../../../usuario/actions/user.action';\nimport { LocalStorageService } from 'src/app/shared/services/local-storage.service';\nimport { Auth } from 'src/app/auth/models/auth.interface';\nimport { UserState } from '../../reducers';\nimport { AppState } from 'src/app/app.reducers';\n\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n\n  hide:boolean = true;\n\n  usuario!: Usuario;\n  registerForm!: FormGroup;\n\n  nombre!:FormControl;\n  apellidos!:FormControl; \n  fechaNacimiento!: FormControl;\n\n  email!:FormControl;\n  password!:FormControl;\n  passwordRepetido!: FormControl;\n  newsletter:FormControl;\n\n  p1!:string;\n  p2!:string;\n\n  constructor(\n\n    private formBuilder: FormBuilder,\n    private router:Router,\n    private serviceLocalStorage: LocalStorageService,\n    private toastService: ToastService,\n    private store:Store<AppState>\n\n  ) {\n        this.email = new FormControl('', [ Validators.required, Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$') ]);\n        this.password = new FormControl('', [Validators.required, Validators.minLength(6), Validators.maxLength(16), ]);\n        this.passwordRepetido = new FormControl('', [Validators.required, Validators.minLength(6), Validators.maxLength(16)]);\n        this.nombre = new FormControl('', [ Validators.required, Validators.minLength(2), Validators.maxLength(100), ]);\n        this.apellidos = new FormControl('', [ Validators.required, Validators.minLength(2), Validators.maxLength(100), ]);\n        this.newsletter = new FormControl();\n        this.fechaNacimiento = new FormControl(formatDate(new Date(), 'yyyy-MM-dd', 'en'),[ Validators.required ] );\n\n        this.registerForm = this.formBuilder.group({\n          \n          nombre: this.nombre,\n          fechaNacimiento: this.fechaNacimiento,\n          apellidos: this.apellidos,\n          email: this.email,\n          password: this.password,\n          passwordRepetido: this.passwordRepetido,\n\n        },\n        {\n          validator: ConfirmPasswordValidator(\"password\", \"passwordRepetido\")\n        }\n        );\n\n\n        this.store.select('user').subscribe({\n          next:(userState:UserState) => {\n            this.usuario = userState.user;\n          }\n        });\n\n   }\n\n  ngOnInit(): void {\n  }\n\n\n  register():void {\n\n  \n    this.usuario = {\n\n      password: this.registerForm.controls.password.value,\n      email: this.registerForm.controls.email.value,\n      nombre : this.registerForm.controls.nombre.value,\n      apellidos : this.registerForm.controls.apellidos.value,\n      birth_date : this.registerForm.controls.fechaNacimiento.value,\n      newsletter :((<boolean>this.newsletter.value) ? true : false), \n\n    }\n\n    //Print \n    console.log('Usuario a registrar ', this.usuario);\n\n    this.store.dispatch(userActions.register({user: this.usuario}));\n\n  }\n\n}\n","\n<div class=\"contenedor-pagina-peq\">\n\n    <div class=\"titulo-pagina\">Alta usuario nuevo, bienvenido!!</div>\n\n    <form  [formGroup]=\"registerForm\" (ngSubmit)=\"register()\" class=\"text-center\">\n\n        <div class=\"my-10 text-left mx-auto sm:w-2/3 2xl:w-1/3\">\n            <mat-form-field appearance=\"outline\" class=\"w-full\" >\n                <mat-label >Nombre:</mat-label>\n                <input matInput type=\"text\" [formControl]=\"nombre\" />\n                <mat-error>\n                    <div *ngIf=\"nombre.errors && nombre.touched\" [ngClass]=\"'error'\">\n                        <div *ngIf=\"nombre.errors.required\">\n                            El nombre de pila es obligatorio.\n                        </div>\n                        <div *ngIf=\"nombre.errors.minlength\">\n                            Password mínimo de 2 caracteres.\n                        </div>\n                        <div *ngIf=\"nombre.errors.maxlength\">\n                            Password máximo 100 caracteres.\n                        </div>\n                    </div>\n                </mat-error>\n            </mat-form-field>\n        </div>\n\n        <div class=\"my-10 text-left mx-auto sm:w-2/3 2xl:w-1/3\">\n            <mat-form-field appearance=\"outline\" class=\"w-full\" >\n                <mat-label >Apellidos:</mat-label>\n                <input matInput type=\"text\" [formControl]=\"apellidos\" />\n                <mat-error>\n                    <div *ngIf=\"apellidos.errors && apellidos.touched\" [ngClass]=\"'error'\">\n                        <div *ngIf=\"apellidos.errors.required\">\n                            El campo Apellidos es obligatorio.\n                        </div>\n                        <div *ngIf=\"apellidos.errors.minlength\">\n                            Apellidos mínimo de 2 caracteres.\n                        </div>\n                        <div *ngIf=\"apellidos.errors.maxlength\">\n                            Apellidos máximo 100 caracteres.\n                        </div>\n\n                    </div>\n                </mat-error>\n            </mat-form-field>\n        </div>\n\n\n        <div class=\"my-10 text-left mx-auto sm:w-2/3 2xl:w-1/3\">\n            <mat-form-field appearance=\"outline\" class=\"w-full \" >\n                <mat-label>Fecha nacimiento:</mat-label>\n                <input matInput type=\"date\" [formControl]=\"fechaNacimiento\" />\n                <mat-error>\n                    <div *ngIf=\"fechaNacimiento.errors && fechaNacimiento.touched\" [ngClass]=\"'error'\">\n                        <div *ngIf=\"fechaNacimiento.errors.required\">\n                            La fecha de nacimiento es obligatorio.\n                        </div>\n                    </div>\n                </mat-error>\n            </mat-form-field>\n        </div>\n\n\n        <div class=\"my-10 text-left mx-auto sm:w-2/3 2xl:w-1/3\">\n            <mat-form-field appearance=\"outline\" class=\"w-full \">\n                <mat-label>Email</mat-label>\n                    <input matInput type=\"email\" [formControl]=\"email\"  >\n                    <mat-error >\n                        <span *ngIf=\"email.errors && (email.touched || email.dirty)\">\n                            <span *ngIf=\"email.errors.required\">\n                                Email es requerido\n                            </span>\n                            <span *ngIf=\"email.errors.pattern\">\n                                Email no tiene formato válido.\n                            </span>\n                        </span>\n                    </mat-error>\n            </mat-form-field>\n        </div>\n\n        <div class=\"my-10 text-left mx-auto sm:w-2/3 2xl:w-1/3\">\n            <mat-form-field appearance=\"outline\" class=\"w-full\" >\n                <mat-label>Contraseña</mat-label>\n                <input matInput [type]=\"hide ? 'password' : 'text'\"  [formControl]=\"password\" >\n                <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n                  <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                </button>\n                <mat-error>\n                <span *ngIf=\"password.errors && (password.touched || password.dirty)\">\n                    <span *ngIf=\"password.errors.required\">\n                        Password es requerido\n                    </span>\n                    <span *ngIf=\"password.errors.minlength\">\n                        Password mínimo de 6 caracteres.\n                    </span>\n                    <span *ngIf=\"password.errors.maxlength\">\n                        Password máximo de 16 caracteres.\n                    </span>\n                </span>\n                </mat-error>\n            </mat-form-field>   \n        </div>\n        \n        <div class=\"my-10 text-left mx-auto sm:w-2/3 2xl:w-1/3\">\n            <mat-form-field appearance=\"outline\" class=\"w-full\" >\n                <mat-label>Repite contraseña</mat-label>\n                <input matInput [type]=\"hide ? 'password' : 'text'\"  [formControl]=\"passwordRepetido\" >\n                <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n                <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                </button>\n                <mat-error>\n                    <div *ngIf=\"passwordRepetido.errors && passwordRepetido.touched\" [ngClass]=\"'error'\">\n                        <div *ngIf=\"passwordRepetido.errors.required\">\n                            El password de usuario es obligatorio.\n                        </div>\n                        <div *ngIf=\"passwordRepetido.errors.minlength\">\n                            Password mínimo de 6 caracteres.\n                        </div>\n                        <div *ngIf=\"passwordRepetido.errors.maxlength\">\n                            Password máximo 16 caracteres.\n                        </div>\n                        <div *ngIf=\"passwordRepetido.errors.confirmPasswordValidator\">\n                            Los password han de coincidir.\n                        </div>\n                    </div>\n                </mat-error>\n            </mat-form-field>\n        </div>\n\n        <div class=\"my-10 text-left mx-auto sm:w-2/3 2xl:w-1/2 \">\n            <input type=\"checkbox\" class=\"inline mr-2 w-5 h-5 align-middle\"  [formControl]=\"newsletter\" checked =\"false\" >\n            <label for=\"recibirEmails\" class=\"inline text-lg align-middle\" >Deseo recibir emails de juguetes que me puedan interesar.</label>\n        </div>\n\n        <button type=\"submit\" class=\"btn boton-misc-rojo mr-8 mb-12\"  [disabled]=\"registerForm.invalid\" >\n            Alta Usuario  \n        </button>\n        <button routerLink=\"/login\" class=\"btn boton-misc-rojo mb-12\"  >Volver</button>\n        \n\n    </form>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RegisterComponent } from '../components/register/register.component';\n\n\n\nconst routes: Routes = [\n  {\n    path: '', \n    component: RegisterComponent,\n  },\n  ];\n\n\n@NgModule({\n\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n\n})\nexport class RegisterRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { RegisterComponent } from '../components/register/register.component';\nimport { RegisterRoutingModule } from './register-routing.module';\n\n\n\n@NgModule({\n  declarations: [\n    RegisterComponent,\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatIconModule,\n    RegisterRoutingModule,\n\n\n  ]\n})\nexport class RegisterModule { }\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}