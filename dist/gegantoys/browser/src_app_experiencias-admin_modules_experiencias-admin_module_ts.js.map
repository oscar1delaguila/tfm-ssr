{"version":3,"file":"src_app_experiencias-admin_modules_experiencias-admin_module_ts.js","mappings":"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","sources":["./src/app/experiencias-admin/components/experiencia-form/experiencia-form.component.ts","./src/app/experiencias-admin/components/experiencia-form/experiencia-form.component.html","./src/app/experiencias-admin/components/experiencia-listado/experiencia-listado.component.ts","./src/app/experiencias-admin/components/experiencia-listado/experiencia-listado.component.html","./src/app/experiencias-admin/modules/experiencias-admin-routing.module.ts","./src/app/experiencias-admin/modules/experiencias-admin.module.ts"],"sourcesContent":["import { formatDate } from '@angular/common';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { timer } from 'rxjs';\nimport { AppState } from 'src/app/app.reducers';\n\nimport { Auth } from 'src/app/auth/models/auth.interface';\nimport { AuthState } from 'src/app/auth/reducers';\n\nimport { Experiencia } from 'src/app/shared/models/experiencia.interface';\nimport { ToastService } from 'src/app/shared/services/toast.service';\nimport { ExperienciaAdminState } from '../../reducer';\nimport * as experienciasActions from '../../actions/experiencias-admin.actions';\nimport { JugueteTituloId } from 'src/app/shared/models/juguete-titulo-id.interface';\n\n\n@Component({\n  selector: 'app-experiencia-form',\n  templateUrl: './experiencia-form.component.html',\n  styleUrls: ['./experiencia-form.component.scss']\n})\nexport class ExperienciaFormComponent implements OnInit {\n\n  \n  userId!:number;\n  isAdmin!:boolean;\n\n  juguete_id!:number;\n\n  private isUpdateMode!: boolean;\n  experiencia!:Experiencia;\n  experienciaId!: string;\n  loaded!: boolean;\n\n  experienciaForm!: FormGroup;\n  \n  juguetesTitulos!:FormControl;\n  juguetesCompradosLista!: JugueteTituloId[];\n\n  titulo!: FormControl;\n  publicado!:FormControl;\n  descripcion!: FormControl;\n  fechaPublicacion!: FormControl;\n  valoracion!:FormControl;\n\n  experiencia_imagen!:string;\n  envioFormDataExperiencia!:FormData;\n\n  remainingChars:number = 1000;\n\n\n  constructor(\n      private activatedRoute: ActivatedRoute,\n      private formBuilder: FormBuilder,\n      private router:Router,\n      private store: Store<AppState> \n  ) { \n\n\n    \n\n    this.loaded = false;\n    this.experiencia_imagen ='';\n    this.envioFormDataExperiencia = new FormData();\n\n    this.experienciaId = this.activatedRoute.snapshot.paramMap.get('id') || '';\n    this.isUpdateMode = ( this.experienciaId ) ? true : false; \n\n    \n    this.titulo = new FormControl('', [ Validators.required, Validators.maxLength(255) ]);\n    this.descripcion = new FormControl ('', [ Validators.required, Validators.maxLength(1000) ]);\n    this.publicado = new FormControl( false , [ Validators.required ] );\n    this.juguetesTitulos = new FormControl('', [Validators.required]);\n    this.valoracion = new FormControl(0,[ Validators.required, Validators.max(10), Validators.min(0) ]);\n    \n    //this.fechaPublicacion = new FormControl(new Date(),[ Validators.required ]);\n\n    this.loadTitulosJuguetesComprados();\n  \n    this.experienciaForm = this.formBuilder.group({\n\n      titulo: this.titulo,\n      descripcion: this.descripcion,\n      juguetesTitulos: this.juguetesCompradosLista,\n      publicado: this.publicado,\n      valoracion:this.valoracion,\n      \n    });\n\n    this.store.select('auth').subscribe({\n      next:(authState:AuthState) => {\n        this.userId = Number.parseInt(authState.auth.user_id);\n        this.isAdmin = authState.auth.isAdmin;\n      }\n    });\n\n\n\n      this.store.select('experienciaAdmin').subscribe({\n\n        next:(experienciaAdminState:ExperienciaAdminState) => {\n\n          this.juguetesCompradosLista = experienciaAdminState.titulosAllJuguetes;\n\n            this.experiencia = experienciaAdminState.experiencia;\n            \n\n            this.titulo.setValue(<string> this.experiencia.titulo );\n            this.descripcion.setValue(<string>this.experiencia.descripcion);\n            this.publicado.setValue(this.experiencia.publicado);\n            this.juguetesTitulos.setValue(this.experiencia.juguete_id);\n            this.valoracion.setValue(this.experiencia.valoracion);\n\n            //el valor de esta variable se la pasamos al componente hijo de file-upload\n            this.experiencia_imagen = this.experiencia.imagen_experiencia;\n\n            //this.fechaPublicacion.setValue(formatDate(experiencia.fecha_publicacion, 'yyyy-MM-dd' , 'en' ));\n\n            this.experienciaForm = this.formBuilder.group({\n              titulo: this.titulo,\n              descripcion: this.descripcion,\n              juguetesTitulos:this.juguetesTitulos,\n              publicado: this.publicado,\n              valoracion:this.valoracion\n              \n            });\n        }\n\n      });\n      \n  }\n\n  loadTitulosJuguetesComprados():void{\n    this.store.dispatch(experienciasActions.getAllTitulosJuguetes());\n  }\n\n  ngOnInit(): void {\n\n    if (this.isUpdateMode) {\n      this.store.dispatch(experienciasActions.getExperienciaByIdAdmin({idExperiencia:this.experienciaId}));\n    }\n  }\n\n\n\n  updateExperiencia():void {\n    this.store.dispatch(experienciasActions.updateExperiencia({experiencia:this.envioFormDataExperiencia}));\n  }\n\n\n  addExperiencia():void {\n    this.store.dispatch(experienciasActions.createExperiencia({experiencia:this.envioFormDataExperiencia}));\n  }\n\n  saveExperiencia():void {\n      \n      //preparamos el formdata para enviar al backend\n      if (this.isUpdateMode){\n        this.envioFormDataExperiencia.append(\"id\", this.experienciaId || '');\n      }\n      this.envioFormDataExperiencia.append(\"titulo\", <string>this.titulo.value);\n      this.envioFormDataExperiencia.append(\"descripcion\", <string>this.descripcion.value);\n      this.envioFormDataExperiencia.append(\"user_id\", this.userId.toString() );\n      this.envioFormDataExperiencia.append(\"juguete_id\", <string>this.juguetesTitulos.value);\n      this.envioFormDataExperiencia.append(\"publicado\", ( (<boolean>this.publicado.value) ? '1' : '0'));\n      this.envioFormDataExperiencia.append(\"valoracion\", this.valoracion.value.toString());\n      this.envioFormDataExperiencia.append(\"fecha_publicacion\", formatDate(new Date(), 'yyyy-MM-dd', 'en'));\n      this.envioFormDataExperiencia.append(\"imagen_experiencia\", this.experiencia_imagen);\n      \n           \n    \n      if (this.isUpdateMode) {\n        this.updateExperiencia();\n      } else {\n        this.addExperiencia();\n      }\n\n  }\n\n\n  imagenCargada(imagenFile:File):void {\n\n    if (imagenFile) {\n\n      //Empezamos a preparar el formdata de envio\n      this.envioFormDataExperiencia.append(\"thumbnail\", imagenFile);\n      //this.envioFormDataExperiencia.append(\"filename\", imagenFile.name);\n\n      //el valor de esta variable se la pasamos al componente hijo de file-upload\n      this.experiencia_imagen = imagenFile.name;\n\n    }  \n\n  }\n\n\n  wordCounter() {\n    this.remainingChars = this.descripcion.value ? 1000 - this.descripcion.value.length : 1000;\n  }\n/*\n  jugueteSeleccionado() {\n\n    this.juguete_id = Number.parseInt(this.juguetesTitulos.value);\n    console.log(\"Juguete seleccionado: \" , this.juguete_id);\n\n  }\n*/\n\n}\n","\n\n\n\n<div class=\"contenedor-pagina-peq\">\n\n  <div style=\"margin-left: auto; margin-right: auto\">\n    <div id=\"postFeedback\"></div>\n  </div>\n\n  <div class=\"mx-auto\">\n\n      <div class=\"titulo-pagina\">Explica tu experiencia con el juguete...</div> \n      \n      <div class=\"my-5 text-left\" >\n        <a class=\"btn boton-misc-rojo\" routerLink=\"/experiencias-listado\">Volver</a>\n      </div>\n\n      <form *ngIf=\"experienciaForm\" enctype=\"multipart/form-data\" [formGroup]=\"experienciaForm\" (ngSubmit)=\"saveExperiencia()\" >\n        \n          <div class=\"my-8 sm:w-full\">\n            <mat-form-field appearance=\"outline\" class=\"w-full\" >\n              <mat-label >Selecciona el juguete que compraste:</mat-label>\n              <mat-select [formControl]=\"juguetesTitulos\" >\n                <mat-option *ngFor=\"let jugueteComprado of juguetesCompradosLista\" [value]=\"jugueteComprado.id\">{{jugueteComprado.titulo}}</mat-option>                \n              </mat-select>\n              <mat-error>\n                <div *ngIf=\"juguetesTitulos.errors && juguetesTitulos.touched\" [ngClass]=\"'error'\">\n                  <div *ngIf=\"juguetesTitulos.errors.required\">\n                      Título del juguete es obligatorio.\n                  </div>\n                </div>\n              </mat-error>\n            </mat-form-field>\n          </div>\n         \n  \n          <div class=\"my-10\">\n            <mat-form-field appearance=\"outline\" class=\"w-full\" >\n              <mat-label>Título:</mat-label>\n              <input matInput type=\"text\" [formControl]=\"titulo\" />\n\n              <mat-error>\n                <div *ngIf=\"titulo.errors && titulo.touched\" [ngClass]=\"'error'\">\n                    <div *ngIf=\"titulo.errors.required\">\n                        Título experiencia es obligatorio\n                    </div>\n                    <div *ngIf=\"titulo.errors.maxlength\">\n                        Título experiencia solamente puede ser de 255 caracteres.\n                    </div>\n                </div>\n              </mat-error>\n            </mat-form-field>            \n          </div>\n\n          <div class=\"my-8 \">\n            <mat-form-field appearance=\"outline\" class=\"w-1/2\" >\n              <mat-label >Valora tu experiencias del 1 al 10:</mat-label>\n              <input matInput type=\"number\" [formControl]=\"valoracion\" />\n              <mat-error>\n                <div *ngIf=\"valoracion.errors && valoracion.touched\" [ngClass]=\"'error'\">\n                    <div *ngIf=\"valoracion.errors.required\">\n                        La valoración es obligatoria.\n                    </div>\n                    <div *ngIf=\"valoracion.errors.max\">\n                        La valoración no puede ser superior a 10.\n                    </div>\n                    <div *ngIf=\"valoracion.errors.min\">\n                        La valoración no puede ser inferior a 0.\n                    </div>\n                </div>\n              </mat-error>\n            </mat-form-field>\n          </div>\n    \n\n          <div class=\"my-10\">\n            <mat-form-field appearance=\"outline\" class=\"w-full\" >\n              <mat-label>Descripción:</mat-label>\n\n              <textarea matInput\n                  [formControl]=\"descripcion\"\n                  (keyup)=\"wordCounter()\" \n                  id=\"wmd-input\" \n                  data-post-type-id=\"2\" \n                  cols=\"92\" \n                  rows=\"10\" \n              >\n              </textarea>\n              <mat-error>\n                <div *ngIf=\"descripcion.errors && descripcion.touched\" [ngClass]=\"'error'\">\n                  <div *ngIf=\"descripcion.errors.required\">\n                      La descripción es obligatoria\n                  </div>\n                  <div *ngIf=\"descripcion.errors.maxlength\">\n                      La descripción no puede ser superior a 1000 caracteres.\n                  </div>\n                </div>\n              </mat-error>\n            </mat-form-field>\n            <div style=\"font-style: italic;\">\n                {{ remainingChars }} Máximo de caracteres...\n            </div>\n\n          </div>\n\n\n          <div class=\"py-10\">\n            <app-file-upload [fileName]=\"experiencia_imagen\" (fileSelected)=\"imagenCargada($event)\" ></app-file-upload>\n          </div>\n\n          <div *ngIf=\"isAdmin\" class=\"justify-self-end mt-2 mb-5 text-lg mr-10\">\n            <input type=\"checkbox\" class=\"input-checkbox\"  [formControl]=\"publicado\" >\n            <label for=\"publicado\" class=\"align-middle text-xs sm:text-xl \" >Publicar</label>\n            <div *ngIf=\"descripcion.errors && descripcion.touched\" [ngClass]=\"'error'\">\n              <div *ngIf=\"descripcion.errors.required\">\n                  Indica si vas a publicar o no la experiencia.\n              </div>\n            </div>  \n          </div>\n      \n\n          <div class=\"py-10\">\n            <button type=\"submit\" class=\"btn boton-misc-rojo\" [disabled]=\"experienciaForm.invalid\" >\n              Guardar Experiencia\n            </button>\n          </div>\n\n      </form>\n\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { AppState } from 'src/app/app.reducers';\nimport { AuthState } from 'src/app/auth/reducers';\nimport { Experiencia } from 'src/app/shared/models/experiencia.interface';\nimport * as varGlobals from \"../../../globals\";\nimport { ExperienciaAdminState } from '../../reducer';\nimport * as actionsExperiencias from '../../actions/experiencias-admin.actions';\n\n@Component({\n  selector: 'app-experiencia-listado',\n  templateUrl: './experiencia-listado.component.html',\n  styleUrls: ['./experiencia-listado.component.scss']\n})\nexport class ExperienciaListadoComponent implements OnInit {\n\n\n  userId!:string;\n  isAdmin!:boolean;\n  idExperiencia!:number;\n\n  server!:string;\n  experienciasUsuario!:Experiencia[];\n  trustedUrl!:SafeUrl[];\n\n  loaded:boolean = false;\n  numeroPagina:number = 1;\n\n  publicado!:FormControl;\n\n  constructor( \n                private router:Router,\n                private sanitizer:DomSanitizer,\n                private store: Store<AppState>\n             ) { \n\n        \n        this.server = varGlobals.server + '/Experiencias/';\n        this.publicado = new FormControl();\n\n        this.store.select('auth').subscribe({\n          next:(authState:AuthState) => {\n            this.userId = authState.auth.user_id;\n            this.isAdmin = authState.auth.isAdmin;\n          }\n        });\n      \n        this.store.select('experienciaAdmin').subscribe({\n          next:(experienciaState:ExperienciaAdminState) => {\n\n            this.numeroPagina = experienciaState.numeroPagina;\n            //this.idExperiencia = Number.parseInt(experienciaState.idExperiencia);\n            this.experienciasUsuario = experienciaState.experiencias;\n            this.trustedUrl = this.experienciasUsuario.map( (experiencia:Experiencia) => { return this.sanitizer.bypassSecurityTrustUrl(this.server + '/' + experiencia.user_id +'/'+ experiencia.id +'/'+ experiencia.imagen_experiencia) } );\n            this.loaded = true;\n          }  \n        });\n\n  }\n\n  ngOnInit(): void {\n    this.store.dispatch(actionsExperiencias.resetExperiencia());\n    this.getListaExperienciasUsuario();\n  }\n\n\n  getListaExperienciasUsuario():void {\n    if (!this.isAdmin) {\n      this.store.dispatch(actionsExperiencias.getAllExperienciasByUsuario({idUser: this.userId, numeroPagina: this.numeroPagina }));\n    } else {\n      this.store.dispatch(actionsExperiencias.getAllExperiencias({numeroPagina:this.numeroPagina}));\n    }  \n  }\n\n  crearExperiencia():void {\n    \n    this.router.navigateByUrl('/experiencias-listado/form/');\n  }\n\n\n  editar(idExperiencia:string):void {\n    this.router.navigateByUrl('/experiencias-listado/form/' + idExperiencia)    \n  }\n\n  eliminar(idExperiencia:string):void {\n\n    this.loaded = false;\n    this.store.dispatch(actionsExperiencias.deleteExperiencia({idExperiencia:idExperiencia}));\n\n  }\n\n/* \n  myTrackByExperiencia(index: number, experiencia: Experiencia): string {  \n    //elemento identificador para saber a partir de cuando hay qeu añadir.\n    return experiencia.id;  \n  } \n*/\n\n  publicarExperiencia(idExperiencia:string, publicado:boolean):void {\n\n    let valorCheckbox:boolean;\n\n    if (publicado) {\n      valorCheckbox = ( <HTMLInputElement>document.getElementById('checkboxExperienciaP' + idExperiencia)).checked;\n    } else {\n      valorCheckbox = ( <HTMLInputElement>document.getElementById('checkboxExperienciaNP' + idExperiencia)).checked;\n    }\n\n    this.store.dispatch(actionsExperiencias.publicarExperiencia({idExperiencia:idExperiencia, valorCheckbox:valorCheckbox}));\n  }\n\n\n}\n\n","\n\n\n<div *ngIf=\"!loaded\" class=\"w-screen h-screen\">\n    <mat-spinner class=\"mx-auto top:32 sm:top-96\"></mat-spinner>\n</div>\n\n\n<div *ngIf=\"loaded\" class=\"contenedor-pagina-peq\">\n\n    <div class=\"titulo-pagina\" >Tus experiencias.</div>\n    \n    <div class=\"\">\n        <button type=\"button\" class=\"btn btn-success boton-crear\" (click)=\"crearExperiencia()\">Crear experiencia</button> \n    </div>\n\n    <div *ngIf=\"experienciasUsuario\">\n\n        <div *ngFor=\"let experiencia of experienciasUsuario ; index as i; \" class=\" py-2 sm:py-5\" > \n\n            <!-- contenedor item -->\n            <div  class=\"contenedor-item\">\n                <div class=\"w-1/2 sm:w-1/3 h-64 xl:h-80\">\n                    <img  *ngIf=\"experiencia.imagen_experiencia\"  [src]=\"trustedUrl[i]\" class=\"imagen-contenedor-item\" >\n                    <img  *ngIf=\"!experiencia.imagen_experiencia\" [src]=\"experiencia.imagen_experiencia | mostrarImagenDefecto \"  class=\"imagen-contenedor-item imagen-vacia \" >\n                </div>    \n                <div class=\"w-1/2 sm:w-2/3 p-3 h-64 xl:h-80\">\n                    <div class=\"\">\n                        <div class=\" text-xs sm:text-base text-red-dark mb-3\">{{ experiencia.titulo }}</div>\n                        <div class=\" text-xs sm:text-base 2xl:text-xl text-red-dark font-sans font-thin\" >Publicado: {{ experiencia.fecha_publicacion | formatDate :3 }}</div>\n                    </div>  \n                    <div class=\"text-left font-thin pt-2 sm:pt-3 text-xs sm:text-base text-naranja-oscuro\">Puntuación: {{ experiencia.valoracion }}</div>\n                </div>\n            </div>\n\n            <div class=\"mx-auto flex justify-between\">\n                <div *ngIf=\"experiencia\" class=\"justify-self-start\">\n                    <button type=\"button\" class=\"btn btn-warning boton-editar mr-3\" (click)=\"editar(experiencia.id)\">Editar</button> \n                    <button type=\"button\" class=\"btn btn-danger boton-eliminar \" (click)=\"eliminar(experiencia.id)\">Eliminar</button>\n                </div>\n                <div class=\"justify-self-end mt-2 mb-5 text-lg mr-10\" (click)=\"publicarExperiencia(experiencia.id, experiencia.publicado)\">\n                    <input *ngIf=\"experiencia.publicado\" id=\"checkboxExperienciaP{{experiencia.id}}\" type=\"checkbox\" class=\"input-checkbox\" \n                           checked\n                    >\n                    <input *ngIf=\"!experiencia.publicado\" id=\"checkboxExperienciaNP{{experiencia.id}}\" type=\"checkbox\" class=\"input-checkbox\" \n                    >\n                    <label for=\"revisadoPublicado\" class=\"align-middle text-xs sm:text-xl \" >Publicado</label>\n                </div>\n            </div>\n        </div>\n        <div class=\"p-4 w-fit mx-auto\" (click)=\"getListaExperienciasUsuario()\" ><a class=\"btn boton-cargar-mas\" >Cargar más</a></div>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ExperienciaFormComponent } from '../components/experiencia-form/experiencia-form.component';\nimport { ExperienciaListadoComponent } from '../components/experiencia-listado/experiencia-listado.component';\nimport { AuthGuard } from 'src/app/shared/guards/auth.guard';\n\n\n\nconst routes: Routes = [\n\n  { \n    path: '',  \n    component: ExperienciaListadoComponent,\n    canActivate: [AuthGuard],     \n  },\n  {\n    path: 'form/:id',  \n    component: ExperienciaFormComponent,\n    canActivate: [AuthGuard],     \n  },\n\n  \n];\n\n\n@NgModule({\n\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n\n})\nexport class ExperienciasAdminRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ExperienciasAdminRoutingModule } from './experiencias-admin-routing.module';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { ExperienciaListadoComponent } from '../components/experiencia-listado/experiencia-listado.component';\nimport { ExperienciaFormComponent } from '../components/experiencia-form/experiencia-form.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { FileUploadModule } from 'src/app/shared/modules/file-upload.module';\nimport { MostrarImagenDefectoModule } from 'src/app/shared/modules/mostrar-imagen-defecto.module';\nimport { FormatDateModule } from 'src/app/shared/modules/format-date.module';\n\n\n\n@NgModule({\n  declarations: [\n    ExperienciaFormComponent,\n    ExperienciaListadoComponent,\n  ],\n  imports: [\n    CommonModule,\n    FileUploadModule,\n    MostrarImagenDefectoModule,\n    FormatDateModule,\n    MatProgressSpinnerModule,\n    ExperienciasAdminRoutingModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n  ]\n})\nexport class ExperienciasAdminModule { }\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}